# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use the Python 3.10 image with UV pre-installed
FROM ghcr.io/astral-sh/uv:python3.10-slim AS uv

# Install the project into /app
WORKDIR /app

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy the required files for building the environment
COPY pyproject.toml /app
COPY uv.lock /app

# Sync dependencies and update the lockfile
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project --no-dev --no-editable

# Add the rest of the project source code and install it
ADD src /app/src

RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --no-editable

# Use a lighter image for production
FROM python:3.10-slim

WORKDIR /app

COPY --from=uv /root/.local /root/.local
COPY --from=uv --chown=app:app /app/.venv /app/.venv

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Define environment variables
ENV TB_API_URL=<TINYBIRD_API_URL>
ENV TB_ADMIN_TOKEN=<TINYBIRD_ADMIN_TOKEN>

# Run the MCP server
ENTRYPOINT ["mcp-tinybird", "stdio"]
